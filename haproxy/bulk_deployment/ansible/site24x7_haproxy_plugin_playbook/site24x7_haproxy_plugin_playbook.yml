---
 - name: "Site24x7 HAProxy Plugin Installation"
   hosts: all 
   become: yes
   vars:
      HAProxy_hostname: "localhost"
      HAProxy_port: "8404"
      HAProxy_username: '"None"'                             # HAProxy username    [Enter '"None"' in case of no username]
      HAProxy_password: '"None"'                             # HAProxy password    [Enter '"None"' in case of no password]
      HAProxy_logs_enabled: "False"
      HAProxy_log_type_name: "None"
      HAProxy_log_file_path: "None"

  
   tasks:    
  # Site24x7 HAProxy Prerequisites Check

   - name: "Python3 Installation Check."
     command: "python3 --version"
     register: python_version_output
     ignore_errors: yes

   - name: "Installing Python if not found (for Debian/Ubuntu)."
     apt:
        name: python3
        state: present
     when: "not python_version_output.stdout and ansible_facts['os_family'] == 'Debian'"

   - name: "Installing Python if not found (for CentOS/RedHat)."
     yum:
        name: python3
        state: present
     when: "not python_version_output.stdout and ansible_facts['os_family'] == 'RedHat'"

   - name: "pip3 Installation Check."
     command: "pip3 --version"
     register: pip_version_output
     ignore_errors: yes

   - name: "Installing pip3 if not found (for Debian/Ubuntu)."
     apt:
        name: python3-pip
        state: present
     when: "not pip_version_output.stdout and ansible_facts['os_family'] == 'Debian'"

   - name: "Installing pip3 if not found (for RedHat/CentOS)."
     yum:
        name: python3-pip
        state: present
     when: "not pip_version_output.stdout and ansible_facts['os_family'] == 'RedHat'"

   - name: "Installing pandas Python3 Package."
     pip:
        name: pandas
        state: present
        executable: pip3
     ignore_errors: yes

   - name: "Installing requests Python3 Package."
     pip:
        name: requests
        state: present
        executable: pip3
     ignore_errors: yes

   - name: "Site24x7 Agent Directory Check."
     stat:
      path: "/opt/site24x7/monagent/temp"
     register: agent_path_check

   - name: "Hosts with no Site24x7 Agent Directory"
     debug:
      msg: "Agent Directory not found"

     when: not agent_path_check.stat.exists


   - name: "Site24x7 Temp Plugins Directory Creation."
     file:
      path: "/opt/site24x7/monagent/temp/plugins/haproxy"
      state: directory
     when: agent_path_check.stat.exists

   - name: "Site24x7 Plugin Directory Check"
     stat:
      path: "/opt/site24x7/monagent/temp/plugins/haproxy"
     register: plugin_path_check

   - name: "Download the Site24x7 HAProxy Plugin Files."
     get_url:
        url: "{{ item }}"
        dest: "/opt/site24x7/monagent/temp/plugins/haproxy"
        mode: 0744
     loop: ["https://raw.githubusercontent.com/site24x7/plugins/master/haproxy/haproxy.py","https://raw.githubusercontent.com/site24x7/plugins/master/haproxy/haproxy.cfg"]
     when: plugin_path_check.stat.exists
    

  # Site24x7 HAProxy Plugin Config File Setup

   - name: "Site24x7 HAProxy Config File Check."
     stat:
      path: "/opt/site24x7/monagent/temp/plugins/haproxy/haproxy.cfg"
     register: haproxy_file_check

   - name: "Site24x7 HAProxy configuration."
     lineinfile: 
       path: "/opt/site24x7/monagent/temp/plugins/haproxy/haproxy.cfg"
       regexp: "{{ item.regex }}"
       line: "{{ item.line }}"
     loop:
       - { regex: 'username=', line: 'username ={{HAProxy_username}}' }
       - { regex: 'password=', line: 'password ={{HAProxy_password}}' }
       - { regex: 'hostname=', line: 'hostname ={{HAProxy_hostname}}' }
       - { regex: 'port=', line: 'port={{HAProxy_port}}' }
       - { regex: 'logs_enabled=', line: 'logs_enabled={{HAProxy_logs_enabled}}' }
       - { regex: 'log_type_name=', line: 'log_type_name={{HAProxy_log_type_name}}' }
       - { regex: 'log_file_path=', line: 'log_file_path={{HAProxy_log_file_path}}' }

     when: haproxy_file_check.stat.exists

  # Site24x7 HAProxy Python File Setup

   - name: "Site24x7 HAProxy Python File Check."
     stat:mon
      path: "/opt/site24x7/monagent/temp/plugins/haproxy/haproxy.py"
     register: haproxy_python_file_check

   - name: "Extracting Python3 Default Path."
     command: which python3
     register: python3_path

   - set_fact:
      actual_path: "{{ '#!'+python3_path.stdout }}"

   - name: "Setting the Default Python Path for the Site24x7 HAProxy Plugin"
     lineinfile:
       path: "/opt/site24x7/monagent/temp/plugins/haproxy/haproxy.py"
       regexp: "#!"
       line: "{{actual_path}}"
     when: haproxy_python_file_check.stat.exists

   - name: "Checking the Site24x7 HAProxy Plugin Output"
     shell: "python3 /opt/site24x7/monagent/temp/plugins/haproxy/haproxy.py --username={{HAProxy_username}} --password={{HAProxy_password}} --hostname={{HAProxy_hostname}} --port={{HAProxy_port}}"
     register: haproxy_python_output
     when: haproxy_python_file_check.stat.exists

   - name: "Site24x7 HAProxy plugins with Error !"
     debug:
      msg: "Site24x7 haproxy Plugin OUTPUT error ! \n {{ haproxy_python_output.stdout }}"
     when: "'\"status\": 0' in haproxy_python_output.stdout and haproxy_python_file_check.stat.exists"

   - name: "Moving the Site24x7 HAProxy Folder to the Plugins Directory"
     command: "mv  /opt/site24x7/monagent/temp/plugins/haproxy /opt/site24x7/monagent/plugins"
     ignore_errors: true
     when: "plugin_path_check.stat.exists and '\"status\": 0' not in haproxy_python_output.stdout"
